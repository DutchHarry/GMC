<#
Purpose: extract GMC data

Faster; not needing IE restarts
Needs some additional delay for the subsequent search page to actually arrive
500ms proved not enough here, so set to 1000

also take extraction date and doctor history table (embedded as $history table pipe delimited)
probably should do that in JSON someday
#>

#change window title
$host.ui.RawUI.WindowTitle = "GMC data all version"
# sure all loop fires
$gmctocheck1 = "2438924" # for restart; number to cycle forward to
$gmctocheck = $gmctocheck1.PadLeft(7,'0')
$line = "somethingtostartwith" # needs initialisation as it tests for $line -eq $null later

# file with GMC numberslinks
$inputfile = "S:\_ue\GMCnumbers2.csv"                                          <# CHANGE #>
# output files
$outputfile = "S:\_ue\GMCdata.csv"                                             <# CHANGE #>
$erroroutputfile = "S:\_ue\errorGMCdata.csv"                                   <# CHANGE #>
# header in output
Add-Content $outputfile "GMCNumber¬Surname¬GivenNames¬Gender¬Status¬PrimaryMedicalQualification¬ProvisionalRegistrationDate¬FullRegistrationDate¬SpecialistRegisterEntryDate¬GPRegistrationDate¬RevalidationInformation¬ExtractionDateTime¬History"
Add-Content $erroroutputfile "GMCNumber"

for(;;) { # all loop
  # stop if nothing left to do
  if ($line -eq $null){break}

  $gmctocheckold = $gmctocheck
  $justrestarted = $true

  $counter = 0
  $reader = [System.IO.File]::OpenText($inputfile)

  # initiate IE
  $ie  = New-Object -com "InternetExplorer.Application"
#  $ie.Visible = $true
  $url = "http://webcache.gmc-uk.org/gmclrmp_enu/start.swe?"
  $ie.navigate($url)
  while ($ie.busy) {
    start-sleep -milliseconds 100
  }
  while($ie.ReadyState -ne 4) {start-sleep -m 100} 

  $nl = [Environment]::NewLine
  $data = $null
  $errordata = $null

  try { # 1st try
    for(;;) {
      $counter++
      $line = $reader.ReadLine()
      if ($line -eq $null){Return}
      # process the line
      #gmc needs 7 digits
      $gmctocheck = $line.PadLeft(7,'0')
      if ($justrestarted -eq $true) {
        if ($gmctocheck -ne $gmctocheckold){
          continue
        }else{
          $justrestarted = $false
        }
      }

      try { # 2nd try
        $ie.document.frames.item(0).document.frames.item(1).document.getElementById("gmcrefnumber").Value = $gmctocheck
        #$ie.document.frames.item(0).document.frames.item(1).document.getElementByName("s_3_1_5_0").Value = $gmctocheck
        $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_3_1_10_0").Click()
        while($ie.ReadyState -ne 4) {start-sleep -m 100} 
        while ($ie.busy) {
          start-sleep -milliseconds 100
        }
	      if ( $ie.document.frames.item(0).document.frames.item(1).document.getElementsByClassName("tablebody")[0].innerText -eq $null ) {	
	        $extractdate = $null
	        $extractdate = ($ie.document.frames.item(0).document.frames.item(1).document.getElementsByClassName("tablebodypaddingtop")[0].innerHTML).Substring(23,22)
	        $gmcnumber = $null
	        $gmcnumber = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_23_0").innerHTML
	        $givennames = $null
	        $givennames = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_36_0").innerHTML
	        $surname = $null
	        $surname = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_37_0").innerHTML
	        $gender = $null
	        $gender = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_35_0").innerHTML
	        $status = $null
	        $status = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_11_0").innerHTML

	        $primmedqual = $null
	        $primmedqual = $ie.document.frames.item(0).document.frames.item(1).document.getElementsByClassName("tablebodyfields")[13].innerHTML
	        $provregdate = $null
	        $provregdate = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_24_0").innerHTML
	        $fullregdate = $null
	        $fullregdate = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_4_0").innerHTML
	        $specregentrydate = $null
	        $specregentrydate = $ie.document.frames.item(0).document.frames.item(1).document.getElementsByClassName("tablebodyfields")[18].innerHTML
	        $gpregdate = $null
	        $gpregdate = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_6_0").innerHTML
	        $revalinfo = $null
	        $revalinfo = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_1_0").innerHTML

	        # to doctor history
	        $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_1_1_4_0").Click()
	        while($ie.ReadyState -ne 4) {start-sleep -m 100} 
	        while ($ie.busy) {
	          start-sleep -milliseconds 100
	        }

	        # grab table with history
	        $listapplettablerows = $null
	        $listapplettablerows = $ie.document.frames.item(0).document.frames.item(1).document.getElementsByClassName("listapplettablerows")
	        $numcells = ($listapplettablerows | Measure).Count
	        $history = $null
	        For ($i=0; $i -lt $numcells; $i++){
	          $datah = $null
	          $datah = $listapplettablerows[$i].innerText
	          $history = "$history|$datah"
	        }

	        # add record to data
	        $data = "$data$gmcnumber¬$surname¬$givennames¬$gender¬$status¬$primmedqual¬$provregdate¬$fullregdate¬$specregentrydate¬$gpregdate¬$revalinfo¬$extractdate¬$history$nl"     
        # goto search again
        $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_1_1_3_0").Click()
        }else{ 
        	# if 2
  	      if ( $ie.document.frames.item(0).document.frames.item(1).document.getElementsByClassName("tablebody")[0].innerText.Substring(0,5) -eq "Sorry") {
            # goto search again
            $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_4_1_3_0").Click()
          } # if 2
	      } # if 1


        start-sleep -milliseconds 1000
        while($ie.ReadyState -ne 4) {start-sleep -m 1000} 
        while ($ie.busy) {
          start-sleep -milliseconds 1000
        }
        
      }catch{ # 2nd catch
        $errordata = "$errordata$gmctocheck$nl"
        Write-Host "Error on $gmctocheck"
#        Return #for testing to break out of look when errors
      } # 2nd try
    } # for loop
  }catch{ # 1st catch
     $errordata = "$errordata$gmctocheck¬1st catch$nl"
     Write-Host "Error on 1st catch $gmctocheck"
  } # 1st try

  $ie.Quit()
  $ie = $null
  start-sleep -milliseconds 100
  $reader.Close()
  $reader = $null
  # flush data to file
  Add-Content $outputfile "$data"
  Add-Content $erroroutputfile "$errordata"
} # for loop all

# flush data to file after Ctrl-C: run this manually if needed
#Add-Content $outputfile "$data"
#Add-Content $erroroutputfile "$errordata"
#$ie.Quit()
#$ie = $null
#$reader.Close()
#$reader = $null


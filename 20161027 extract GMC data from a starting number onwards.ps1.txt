<#
Purpose:
  extract GMC data from a starting number onwards

CHANGE:
  Lines marked :                                                               <# CHANGE #>

Tested on:
  Windows Server 2016 (incl IE 11)

Output Format
  Main delimiter: ¬
  History delimiter: |

Issues:
Reuse of existing IE object fails, so need to quit and restart IE: SORTED, OK now
Even then it breaks regularly, so need to put it in an additional loop to catch these breaks
Didn't use Progress bar because of additional overhead; just write current number to screen
When counter stops progressing, you should use Ctrl-C and run the following 4 lines manually 
  $ie.Quit()
  $ie = $null
  Add-Content $outputfile "$data"
  Add-Content $erroroutputfile "$errordata"

After that change $gmctostart below to the number on which it hung (and adapt numberstocheck to let it stop at the righ place). 
You can find this with
  $gmctocheck


#>

<#
codes
nnnnnnC # C checkdigit

$gmctocheck.ToString("000000") +
(
([int]$gmctocheck.ToString("000000").Substring(0,1) * 1) + 
([int]$gmctocheck.ToString("000000").Substring(1,1) * 3) + 
([int]$gmctocheck.ToString("000000").Substring(2,1) * 7) + 
([int]$gmctocheck.ToString("000000").Substring(3,1) * 1) + 
([int]$gmctocheck.ToString("000000").Substring(4,1) * 3) + 
([int]$gmctocheck.ToString("000000").Substring(5,1) * 7)
).ToString("000").SubString(2,1)

numbers should be below 500000, see below

former LR codes
5nnnnnn; seems 5yynnnn based on old yy/xxxx, thus 5yyxxxx
in that case scan ranges
590nnnn-5999999 ; only about 30+
500nnnn-5209999 ; bulk

new codes
6nnnnnn; seems 6yynnnn
seems first 2 are 00-16
last four 0000-9999
so scan
6000000-6179999

7nnnnnnn
scan
7000000-7600000

So total
500k+100k+210k+200k+600k=1610k
2 processes allow 5k per hour so 322 hours so about 15 days
#>


#change window title
$host.ui.RawUI.WindowTitle = "GMC data number onwards"

$gmctostart = 7271572                                                          <# CHANGE #>
$numberstocheck = 328428 #                                                     <# CHANGE #>
$checkdigit = $false # $true # $false                                          <# CHANGE #>
$outputfile = "S:\_ue\2GMCdata.csv"                                            <# CHANGE #>
$erroroutputfile = "S:\_ue\error2GMCdata.csv"                                  <# CHANGE #>

# header in output
#Add-Content $outputfile "GMCNumber¬Surname¬GivenNames¬Gender¬Status¬PrimaryMedicalQualification¬ProvisionalRegistrationDate¬FullRegistrationDate¬SpecialistRegisterEntryDate¬GPRegistrationDate¬RevalidationInformation¬ExtractionDateTime¬History"
#Add-Content $erroroutputfile "GMCNumber"

# sure 'all loop' fires
#$gmctocheck = $gmctostart.Tostring().PadLeft(7,'0')
$counter=0  # start

for(;;) { # 'all loop'

  # initiate IE
  $ie  = New-Object -com "InternetExplorer.Application"
#  $ie.Visible = $true
  $url = "http://webcache.gmc-uk.org/gmclrmp_enu/start.swe?"
  $ie.navigate($url)
  while ($ie.busy) {start-sleep -milliseconds 20}
  while ($ie.ReadyState -ne 4) {start-sleep -milliseconds 20} 
  while ($ie.document.title -eq $null) {start-sleep -milliseconds 20}    
#  $ie.document.title
  while (!($ie.document.title -eq "List of Registered Medical Practitioners `| Doctor Search")) {start-sleep -milliseconds 20}    

  $nl = [Environment]::NewLine
  $data = $null
  $errordata = $null

  try { # 1st try
    for(;;) {
      # check for stop
      if ($counter -gt $numberstocheck) {
        Add-Content $outputfile "$data"
        Add-Content $erroroutputfile "$errordata"
        $ie.Quit()
        $ie = $null
        # flush data to file
        Return
      }
      if ($checkdigit) {
        $gmctocheck = 
        ($gmctostart + $counter).ToString("000000") +
        (
        ([int]($gmctostart + $counter).ToString("000000").Substring(0,1) * 1) + 
        ([int]($gmctostart + $counter).ToString("000000").Substring(1,1) * 3) + 
        ([int]($gmctostart + $counter).ToString("000000").Substring(2,1) * 7) + 
        ([int]($gmctostart + $counter).ToString("000000").Substring(3,1) * 1) + 
        ([int]($gmctostart + $counter).ToString("000000").Substring(4,1) * 3) + 
        ([int]($gmctostart + $counter).ToString("000000").Substring(5,1) * 7)
        ).ToString("000").SubString(2,1)
      }else{
        $gmctocheck = ($gmctostart + $counter).Tostring().PadLeft(7,'0')
      }
      Write-Host "$gmctocheck" # fastest after all
      # progress indicator, so we can see it's still working
#      Write-Progress -Activity "Working..." -CurrentOperation "$gmctocheck processing" -Status "Please wait."
      # Progress bar is slow so only once a minute
#      if ($sw.Elapsed.TotalMinutes -ge 1) {
#          Write-Progress -Activity "Working... updates once a Minute" -Status "Processing $gmctocheck"
#          $sw.Reset(); $sw.Start()
#      }

      try { # 2nd try
        $ie.document.frames.item(0).document.frames.item(1).document.getElementById("gmcrefnumber").Value = $gmctocheck
        $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_3_1_10_0").Click()
        while ($ie.ReadyState -ne 4) {start-sleep -milliseconds 20} 
        while ($ie.busy) {start-sleep -milliseconds 20}
        while ($ie.document.title -eq $null) {start-sleep -milliseconds 20}    
#        $ie.document.title
        while (!( ($ie.document.title -eq "List of Registered Medical Practitioners `| Doctor Details") -or ($ie.document.title -eq "List of Registered Medical Practitioners `| Search Results") ) ) {start-sleep -milliseconds 20}    

        # if 1
#        if ( $ie.document.frames.item(0).document.frames.item(1).document.getElementsByClassName("tablebody")[0].innerText.Substring(0,5) -eq "Sorry") {
        if ($ie.document.title -eq "List of Registered Medical Practitioners `| Search Results") {
          # goto search again
          $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_4_1_3_0").Click()
        }else{ 
          # these are the not found cases
          # if 2
#          if ( $ie.document.frames.item(0).document.frames.item(1).document.getElementsByClassName("tablebody")[0].innerText -eq $null ) {  
          if ( $ie.document.title -eq "List of Registered Medical Practitioners `| Doctor Details" ) {  
            # these sre the cases where the GMC number was found
            $extractdate = $null
            $extractdate = ($ie.document.frames.item(0).document.frames.item(1).document.getElementsByClassName("tablebodypaddingtop")[0].innerHTML).Substring(23,22)
            $gmcnumber = $null
            $gmcnumber = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_23_0").innerHTML
            $givennames = $null
            $givennames = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_36_0").innerHTML
            $surname = $null
            $surname = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_37_0").innerHTML
            $gender = $null
            $gender = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_35_0").innerHTML
            $status = $null
            $status = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_11_0").innerHTML

            $primmedqual = $null
            $primmedqual = $ie.document.frames.item(0).document.frames.item(1).document.getElementsByClassName("tablebodyfields")[13].innerHTML
            $provregdate = $null
            $provregdate = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_24_0").innerHTML
            $fullregdate = $null
            $fullregdate = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_4_0").innerHTML
            $specregentrydate = $null
            $specregentrydate = $ie.document.frames.item(0).document.frames.item(1).document.getElementsByClassName("tablebodyfields")[18].innerHTML
            $gpregdate = $null
            $gpregdate = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_6_0").innerHTML
            $revalinfo = $null
            $revalinfo = $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_2_1_1_0").innerHTML

            # to doctor history
            $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_1_1_4_0").Click()
            while ($ie.ReadyState -ne 4) {start-sleep -milliseconds 20} 
            while ($ie.busy) {start-sleep -milliseconds 20}
            while ($ie.document.title -eq $null) {start-sleep -milliseconds 20}    
#            $ie.document.title
            while ($ie.document.title -ne "List of Registered Medical Practitioners `| Doctor History") {start-sleep -milliseconds 20}

            # grab table with history
            $listapplettablerows = $null
            $listapplettablerows = $ie.document.frames.item(0).document.frames.item(1).document.getElementsByClassName("listapplettablerows")
            $numcells = ($listapplettablerows | Measure).Count
            $history = $null
            For ($i=0; $i -lt $numcells; $i++){
              $datah = $null
              $datah = $listapplettablerows[$i].innerText
              $history = "$history|$datah"
            }

            # add record to data
            $data = "$data$gmcnumber¬$surname¬$givennames¬$gender¬$status¬$primmedqual¬$provregdate¬$fullregdate¬$specregentrydate¬$gpregdate¬$revalinfo¬$extractdate¬$history$nl"     
            
            # goto search again
            $ie.document.frames.item(0).document.frames.item(1).document.getElementById("s_1_1_3_0").Click()
          } # if 2
        } # if 1

#        start-sleep -milliseconds 1000
        while ($ie.ReadyState -ne 4) {start-sleep -milliseconds 20} 
        while ($ie.busy) {start-sleep -milliseconds 20}
        while ($ie.document.title -eq $null) {start-sleep -milliseconds 20}    
#        $ie.document.title
        while ($ie.document.title -ne "List of Registered Medical Practitioners `| Doctor Search") {start-sleep -milliseconds 20}    

      }catch{ # 2nd catch
        $errordata = "$errordata$gmctocheck$nl"
        Write-Host "Error on $gmctocheck"
        Return #for testing to break out of loop when errors

      } # 2nd try
      $counter++
    } # for loop
  }catch{ # 1st catch
     $errordata = "$errordata$gmctocheck¬1st catch$nl"
     Write-Host "Error on 1st catch $gmctocheck"
  } # 1st try
#  if ($counter -gt $numberstocheck) {Break}

  $ie.Quit()
  $ie = $null
  start-sleep -milliseconds 1000 # give it a bit more to be sure
  # flush data to file
  Add-Content $outputfile "$data"
  Add-Content $erroroutputfile "$errordata"
} # for loop all

# flush data to file after Ctrl-C: run this manually if needed
#Add-Content $outputfile "$data"
#Add-Content $erroroutputfile "$errordata"
#$ie.Quit()
#$ie = $null
$ie.visible = $true
